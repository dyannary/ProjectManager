@model ProjectManager.Application.DataTransferObjects.User.UserByIdForClientDto

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Settings</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    @using (Ajax.BeginForm("EditUserByClient", "Account", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "HandleUpdateUser"
    }, new { enctype = "multipart/form-data", id = "projectForm" }))
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <section>
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                }
            </section>

            <div class="form-horizontal">

                @Html.HiddenFor(model => model.Id)

                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.FirstName, "First name: ", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", data_valmsg_for = "FirstName" })
                    </div>
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", data_valmsg_for = "LastName" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger", data_valmsg_for = "Username" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Photo, "Update image", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    <input type="file" name="Photo" id="File" class="form-control" accept="image/*" />
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.RemovePhoto, "Remove image", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.CheckBoxFor(model => model.RemovePhoto, htmlAttributes: new { @class = "form-check form-switch" })
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-success">Update</button>
        </div>
    }
</div>