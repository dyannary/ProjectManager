@model ProjectManager.Application.DataTransferObjects.User.UserPasswordChangeDto

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Change password</h5>
    </div>
    @using (Ajax.BeginForm("UserPasswordChange", "Account", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "HandleEditOrChangePasswordUser"
    }, new { enctype = "multipart/form-data", id = "projectForm" }))
    {
        <div class="modal-body">

            <section>
                @if (!ViewData.ModelState.IsValid)
                {
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                }
            </section>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.CurrentPassword, "Current password:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger", data_valmsg_for = "CurrentPassword" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.NewPassword, "New password:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger", data_valmsg_for = "NewPassword" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ConfirmPassword, "Confirm password:", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", data_valmsg_for = "ConfirmPassword" })
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-success">Change</button>
        </div>
    }
</div>

@section Scripts{
    <script>
        function HandleChangePasswordUser(response) {
            debugger;
            if (response.success) {
                $('#modal').modal('hide');
            } else if (response.errors !== null) {
                $('span[data-valmsg-for]').text('');

                for (var key in response.errors) {
                    var messages = response.errors[key];
                    var errorElement = $('span[data-valmsg-for="' + key + '"]');
                    errorElement.text(messages);
                }
            }
        }
    </script>

}
