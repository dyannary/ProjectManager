@using ProjectManager.Application.DataTransferObjects.ProjectTask
@model ProjectTaskById

<div class="card mb-3">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="modal-title mb-4" id="staticBackdropLabel">Details</h5>
        </div>
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ProjectId)
            <div class="form-horizontal">
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.AssignedTo, "Assigned To", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.AssignedTo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.TaskStateId, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TaskStateId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TaskStateId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.TaskTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.TaskTypeId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.TaskTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.PriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PriorityId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Description, "Description", htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @disabled = "disabled", style = "width: 100%; height: 100px;" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", data_valmsg_for = "Description" })
                    </div>
                </div>

                @if (Model.PhotoPaths != null)
                {
                    <div id="carouselExampleControls" class="carousel slide carousel-dark custom-carousel-background" data-interval="false">
                        <div class="carousel-inner">

                            @if (Model.PhotoPaths != null && Model.PhotoPaths.Any())
                            {
                                var isFirst = true;
                                foreach (var photoPath in Model.PhotoPaths)
                                {
                                    <div class="carousel-item @(isFirst ? "active" : "")">
                                        <img src="@Url.Content(photoPath)" class="d-block w-100 custom-carousel-image" alt="Task Photo" onclick="openImageModalForDetails('@Url.Content(photoPath)')">
                                    </div>
                                    isFirst = false;
                                }
                            }
                        </div>

                        <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </a>
                    </div>
                    }
                <div id="imageModal" class="modal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-body">
                                <img id="modalImage" src="" alt="Modal Image">
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
</div>

<style>

    .custom-carousel-background {
        margin-top: 1.5em;
        background-color: #716e9373;
        padding: 20px;
    }
    .carousel-item img {
        max-height: 500px;
        width: 100%;
        height: auto;
        max-height: 400px;
        object-fit: contain;
    }

    .col-md-3 {
        flex: 0 0 auto;
        width: 200px;
        height: 200px;
        display: flex;
        margin-bottom: 1.5em;
        overflow: hidden;
    }

    #images {
        width: 90%;
        position: relative;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        transform: scale(1.5);
        transform-origin: 40% 20%;
    }

#images figure {
    width: calc(50% - 10px); 
    margin-bottom: 20px;
    text-align: center; 
    position: relative;
    overflow: hidden;
    border-radius: 10px; 
    aspect-ratio: 1; 
}

#images img {
    width: 100%; 
    height: 100%;
    object-fit: cover; 
}
    .square-image {
        max-width: 100%;
        max-height: 80vh;
        object-fit: contain;
        display: flex;
    }

    .img2 {
        height: 200px;
        width: 200px;
    }

    #imageModal .modal-dialog {
        width: 80%;
        margin: auto;
        max-width: 100%;
        max-height: 90vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #imageModal .modal-content {
        width: auto;
        height: auto;
        border-radius: 10px;
        position: relative;
        overflow: hidden;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #modalImage {
        max-width: 100%;
        max-height: 80vh;
        object-fit: contain;
    }

    .delete-btn {
        position: absolute;
        top: 0;
        right: 0;
        background-color: red;
        color: white;
        border: none;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 14px;
        line-height: 1;
        cursor: pointer;
    }

</style>