@using ProjectManager.Application.DataTransferObjects.ProjectTask
@model AddTaskDto

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Add task</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    @using (Ajax.BeginForm("AddTask", "ProjectTask", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "handleCreateUpdateTask"
    }, new { enctype = "multipart/form-data", id = "taskForm"}))
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.ProjectId)
            <div class="form-horizontal">
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", data_valmsg_for = "Name" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.AssignedTo, "Assigned To", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.AssignedTo, (SelectList)ViewBag.UsersInProject, "Select user", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger", data_valmsg_for = "AssignedTo" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.TaskStateId,
                       "State", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.TaskStateId, (SelectList)ViewBag.TaskState, "Select state", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.TaskStateId, "", new { @class = "text-danger", data_valmsg_for = "TaskStateId" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.TaskTypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.TaskTypeId, (SelectList)ViewBag.TaskType, "Select type", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.TaskTypeId, "", new { @class = "text-danger", data_valmsg_for = "TaskTypeId" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.PriorityId, "Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.PriorityId, (SelectList)ViewBag.Priorities, "Select Priority", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger", data_valmsg_for = "PriorityId" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", style = "width: 100%; height: 100px;" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", data_valmsg_for = "Description" })
                    </div>
                </div>
                <div class="form-group row mb-2">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Files, "Upload images", htmlAttributes: new { @class = "control-label" })
                        @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger", data_valmsg_for = "Files" })
                    </div>
                    <div class="col-md-6">
                        <div class="container">
                            <label for="file-input">
                                <i class="bi bi-upload upload-icon"></i><br>
                            </label>
                            <div id="file-size-error" class="text-danger" style="display: none;">
                                File size exceeds the limit of 5 MB.
                            </div>
                        </div>
                    </div>

                </div>

                <input type="file" id="file-input" name="Files" class="form-control"
                       accept="image/*" style="display:none;" onchange="preview()" multiple />
                <div style="max-height: 200px; overflow-y: auto">
                    <div id="images" class="image-container">
                    </div>
                </div>

                <div id="imageModal" class="modal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-body">
                                <img id="modalImage" src="" alt="Modal Image">
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-danger">Add</button>
        </div>
    }
</div>

<style>
   /* .container p{
        text-align: center;
        margin: 20px 0 30px 0;
    }*/
    #images {
        width: 90%;
        position: relative;
        margin: auto;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between; 
    }

    #images figure {
        width: calc(50% - 10px); 
        margin-bottom: 20px;
        text-align: center; 
        position: relative;
        overflow: hidden;
        border-radius: 10px; 
        aspect-ratio: 1; 
    }

    #images img {
        width: 100%; 
        height: 100%;
        object-fit: cover; 
    }

    figcaption {
        display: none;
    }

    .upload-label {
        display: flex;
        flex-direction: column;
        align-items: center; 
        justify-content: center; 
        text-align: center;
        cursor: pointer;
        height: 100%;
    }

    .upload-icon {
        font-size: 30px; 
        font-weight: bold;
    }

    #imageModal .modal-dialog {
        width: 80%; 
        margin: auto; 
        max-width: 100%;
        max-height: 90vh;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #imageModal .modal-content {
        width: auto;
        height: auto;
        border-radius: 10px;
        position: relative;
        overflow: hidden;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #modalImage {
        max-width: 100%;
        max-height: 80vh;
        object-fit: contain;
    }

    .delete-btn {
        position: absolute;
        top: 0;
        right: 0;
        background-color: red;
        color: white;
        border: none;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 14px;
        line-height: 1;
        cursor: pointer;
    }


</style>