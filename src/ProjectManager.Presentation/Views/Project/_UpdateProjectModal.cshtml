@using ProjectManager.Application.DataTransferObjects.Projects
@model ProjectByIdDto

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Update project</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    @using (Ajax.BeginForm("Update", "Project", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "handleCreateUpdateProject"
    }, new { enctype = "multipart/form-data", id = "projectForm" }))
    {
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.HiddenFor(model => model.Id)

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Name, "Project name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", data_valmsg_for = "Name" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Description, "Project description", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", data_valmsg_for = "Description" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.File, "Change image", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    <input type="file" name="File" id="File" class="form-control" accept="image/*" />
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger", data_valmsg_for = "File" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ProjectStartDate, "Project start date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.TextBoxFor(model => model.ProjectStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.ProjectStartDate, "", new { @class = "text-danger", data_valmsg_for = "ProjectStartDate" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ProjectEndDate, "Project end date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.ProjectEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.ProjectEndDate, "", new { @class = "text-danger", data_valmsg_for = "ProjectEndDate" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.ProjectStateID, "Project state", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.ProjectStateID, (SelectList)ViewBag.ProjectStates, "Select Project State", new { @class = "form-select dropdown-toggle" })
                    @Html.ValidationMessageFor(model => model.ProjectStateID, "", new { @class = "text-danger", data_valmsg_for = "ProjectStateID" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.IsDeleted, "Disable project", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.CheckBoxFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger", data_valmsg_for = "IsDeleted" })
                </div>
            </div>

            <div class="form-group row mb-2">
                <div class="col-md-6">
                    @Html.LabelFor(model => model.RemoveFile, "Remove image", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-6 align-items-center">
                    @Html.CheckBoxFor(model => model.RemoveFile, htmlAttributes: new { @class = "form-check form-switch" })
                    @Html.ValidationMessageFor(model => model.RemoveFile, "", new { @class = "text-danger", data_valmsg_for = "RemoveFile" })
                </div>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-danger">Update</button>
    </div>
    }
</div>