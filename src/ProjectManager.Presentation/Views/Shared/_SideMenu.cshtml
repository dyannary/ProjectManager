<nav class="navbar navbar-expand-lg navbar-light" style="background-color: white;">
    <h1 class="navbar-brand m-1 text-dark">Project management</h1>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse justify-content-between m-lg-1" id="navbarNavAltMarkup">
        <div class="navbar-nav">
            @if (User.IsInRole("admin"))
            {
                <a class="nav-link">@Html.ActionLink("Users", "Index", "Admin", new { area = "" }, new { @class = "nav-link" })</a>
            }
            else if (User.IsInRole("user"))
            {
                <a class="nav-link">@Html.ActionLink("Projects", "Index", "Project", new { area = "" }, new { @class = "nav-link" })</a>
                <a class="nav-link">@Html.ActionLink("Tasks", "Index", "ProjectTask", new { area = "" }, new { @class = "nav-link" })</a>
            }
        </div>

        <div class="navbar-nav d-flex align-items-center">

            @if (User.IsInRole("user"))
            {
            <button class="bg-transparent border-0 position-relative nav-link" id="modalConfirmButton" onclick="openModal({ url: '/Notification/OpenNotificationModal', data: 0 })" data-toggle="ajax-modal" data-trigger="Modal">
                <svg width="20" height="20" fill="currentColor" class="bi bi-bell-fill" viewBox="0 0 16 16">
                    <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901" />
                </svg>
                <span id="notificationCount" class="position-absolute end-0 text-danger" style="top: -5px;">0</span>
            </button>
            }


            <div class="dropdown">
                <a href="#" class="dropdown-toggle btn" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="font-size: inherit" id="username"></a>
                <div class="dropdown-menu bg-light" aria-labelledby="dropdownMenuButton">
                    <a href="#" class="dropdown-item text-dark text-center" id="modalConfirmButton" onclick="openModal({ url: '/Account/OpenEditUserByClientModal', data: 0 })" data-toggle="ajax-modal" data-trigger="Modal">
                        Settings
                    </a>
                    <a href="#" class="dropdown-item text-dark text-center" id="modalConfirmButton" onclick="openModal({ url: '/Account/OpenChangePasswordModal', data: 0 })" data-toggle="ajax-modal" data-trigger="Modal">
                        Change Password
                    </a>
                    <a href="#">@Html.ActionLink("Logout", "Logout", "Account", new { area = "" }, new { @class = "dropdown-item text-dark text-center" })</a>
                </div>
            </div>


            <div class="d-flex align-items-center">
                <div style="text-align: center; margin-right: 10px">
                    <div class="avatar-container-menu">
                        <img class="avatar avatar-menu avatar-lg" alt="User avatar" id="UserAvatar" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</nav>

@Scripts.Render("~/bundles/NotificationLayout")
@Styles.Render("~/Content/CustomCss/layout.css")

@* SignalR Script. It needs to be in this file! *@
<script>
        $(function () {
            var nameIdentifier = '@User.Identity.Name';

            getUserPhoto();
            getUserUsername();

            var connection = $.hubConnection('/signalr');
            connection.qs = { 'nameIdentifier': nameIdentifier }

            var hubProxy = connection.createHubProxy('notificationHub');

            hubProxy.on('updateNotificationCount', function (data) {
                updateNotificationCount(data);
                toastr.info("You've got a new notification");
            });

            connection.start().done(function () {
                debugger
                console.log('SignalR connected');
                updateNotificationCountForStart();
            });

});
</script>