<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css" rel="stylesheet">


<div class="d-flex justify-content-end mb-3">
    <button type="button" class="btn btn-primary" onclick="openModal({url: '/Admin/AddUser', data: 0})" data-bs-toggle="modal" data-bs-target="#addUserModal">Register user</button>
</div>


<table id="UserDatabase" class="table-borderless row-border border-light" width="100%" cellspacing="0">
    <thead style="background-color: #2f3248; color: #ffffff" class="table-light">
        <tr>
            <th>Id</th>
            <th>RoleId</th>
            <th>UserName</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>Email</th>
            <th>CreatedDate</th>
            <th>IsEnabled</th>
        </tr>
    </thead>
</table>

<style>
    .avatar {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        margin-right: 10px;
    }

    .dt-center {
        text-align: center;
    }
</style>

@section scripts {
    <script>
        $(document).ready(function () {
            initializeUserDataTable();

            var customButton = $('<button type="button" class="btn btn-primary">My Button</button>');
            $(table.buttons().container()).prepend(customButton);

            customButton.on('click', function () {
                alert('Button activated');
            });
        });

        function initializeUserDataTable() {
            var table = $('#UserDatabase').DataTable({

                "serverSide": true,
                "dom": "<'row'<'col-sm-6'l><'col-sm-6'f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-5'i><'col-sm-7'p>>", // Includes search input box ("f") //f, r, t, l,
                "sProcessing": false,
                "pageLength": 15,
                "order": [[6, 'desc']],
                ajax: {
                    "url": "/Admin/UserTable",
                    "type": "POST",
                    "dataType": "json",
                    "beforeSend": function (xhr) {
                        $('#refreshMessage').text('Refreshing...').show();
                    },
                },
                "drawCallback": function (settings) {
                    $('#refreshMessage').hide();
                },
                "buttons": [
                    {
                        "text": 'My button',
                        "action": function (e, dt, node, config) {
                            alert('Button activated');
                        }
                    }
                ],
                "columns": [
                    { "data": "Id", "title": "Id", "name": "Id", "visible": false },
                    { "data": "RoleId", "title": "RoleId", "name": "RoleId", "visible": false },
                    {
                        "data": "UserName",
                        "title": "Username",
                        "name": "UserName",
                        "render": function (data, type, full, meta) {
                            var avatar = '<img src="' + full.PhotoPath + '" class="avatar" width="30px">';
                            return avatar + ' ' + data;
                        },
                        "autoWidth": true
                    },
                    { "data": "FirstName", "title": "First Name", "name": "FirstName", "autoWidth": true },
                    { "data": "LastName", "title": "Last Name", "name": "LastName", "autoWidth": true },
                    { "data": "Email", "title": "Email", "name": "Email", "autoWidth": true },
                    {
                        "data": "CreatedDate",
                        "title": "Created Date",
                        "name": "CreatedDate",
                        "autoWidth": true,
                        "render": function (data, type, row) {
                            if (type === 'display') {
                                var date = new Date(parseInt(data.substr(6)));
                                var day = date.getDate();
                                var month = date.getMonth() + 1;
                                var year = date.getFullYear();
                                return (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;
                            }
                            return data;
                        }
                    },
                    {
                        "data": "IsEnabled",
                        "title": "Is Enabled",
                        "name": "IsEnabled",
                        "autoWidth": true,
                        "className": "dt-center",
                        "render": function (data, type) {
                            if (type === 'display') {
                                if (data === true || data === 'true') {
                                    return '<i class="fas fa-check-circle text-success"></i>';
                                } else {
                                    return '<i class="fas fa-times-circle text-danger"></i>';
                                }
                            }
                            return data;
                        }
                    }

                ],
                "pagingType": "full_numbers",
                "language": {
                    "search": '<i class="bi bi-search"></i>',
                    "searchPlaceholder": "Search",
                    "paginate": {
                        "first": "First",
                        "previous": "&laquo;",
                        "next": "&raquo;",
                        "last": "Last"
                    },

                },
            });

            var contextmenu = $('#UserDatabase').contextMenu({
                selector: 'tr',
                trigger: 'right',
                callback: function (key, options) {
                    let row = table.row(options.$trigger);
                    switch (key) {
                        case 'Edit':
                            openModal({ data: row.data()["Id"], url: '../Admin/UpdateUser' });
                            break;
                        case 'Details':
                            openModal({ data: row.data()["Id"], url: '../Admin/GetUserDetails' });
                            break;
                        default:
                            break;
                    }
                },

                items: {
                    "Edit": { name: "Edit" },
                    "Details": { name: "Details" }
                }
            });
            $("div.toolbar").html('<button type="button" class="btn btn-primary" onclick="openModal({url: \'/Admin/AddUser\', data: 0})" data-bs-toggle="modal" data-bs-target="#addUserModal">Add User</button>');
            return table;
        }
    </script>
}