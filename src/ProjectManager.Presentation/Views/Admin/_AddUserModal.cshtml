@using ProjectManager.Application.DataTransferObjects.User
@model AddUserDto

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Add user</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    @using (Ajax.BeginForm("AddUser", "Admin", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "reloadData"
    }))
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", type = "password" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.DropDownListFor(model => model.RoleId, (SelectList)ViewBag.UserRoles, "Select Role", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Add</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        </div>
    }
</div>