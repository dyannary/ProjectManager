﻿@using ProjectManager.Application.DataTransferObjects.User
@model UserByIdDto

<script>
    $(document).ready(function () {
        $('input[type=text], input[type=password], input[type=email], select').on('input', function () {
            var fieldName = $(this).attr('name');
            $('span[data-valmsg-for="' + fieldName + '"]').text('');
            $(this).removeClass('is-invalid');
        });
    });
</script>

<div class="modal-content">
    <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel" ">Modify user</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
    </div>
    @using (Ajax.BeginForm("UpdateUser", "Admin", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "handleCreateUpdateUser"
    }, new { enctype = "multipart/form-data", id = "updateUserForm" }))
    {
        <div class="modal-body">
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.HiddenFor(model => model.Id)
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger validation-message", data_valmsg_for = "UserName" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger validation-message", data_valmsg_for = "FirstName" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger validation-message", data_valmsg_for = "LastName" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger validation-message", data_valmsg_for = "Email" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.LabelFor(model => model.RoleId, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.DropDownListFor(model => model.RoleId, (SelectList)ViewBag.UserRoles, "Select Role", new { @class = "form-select dropdown-toggle" })
                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger validation-message", data_valmsg_for = "RoleId" })
                    </div>
                </div>
                <div class="form-group row mb-2 px-4">
                    <div class="col-6 col-md-4">
                        @Html.Label("Is Active")
                    </div>
                    <div class="col-12 col-md-8">
                        @Html.CheckBoxFor(model => model.IsEnabled, new { @class = "form-check-input", @role = "switch", @id = "flexSwitchCheckChecked" })
                        <label class="form-check-label" for="flexSwitchCheckChecked" id="switchLabel"></label>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-primary custom-primary"><i class="bi bi-pencil"></i>  Modify</button>
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        </div>
    }
</div>